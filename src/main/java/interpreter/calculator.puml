@startuml
class Client
class Calculator
abstract class Expression{
    + interpreter(map: Map<String, Integer>): void
}
class VarExpression{
    + interpreter(map: Map<String, Integer>): void
}
class SymbolExpression{
    + interpreter(map: Map<String, Integer>): void
}
class AddExpression{
    - left: Expression
    - right: Expression
    + interpreter(map: Map<String, Integer>): void
}
class SubExpression{
    - left: Expression
    + right: Expression
    + interpreter(map: Map<String, Integer>): void
}
Client --> Calculator
Calculator o-- Expression
Expression <|-- VarExpression
Expression <|-- SymbolExpression
SymbolExpression <|-- AddExpression
SymbolExpression <|-- SubExpression
AddExpression o-- Expression
SubExpression o-- Expression
@enduml